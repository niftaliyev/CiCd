name: Build and Deploy Docker Container via SSH

on:
  push:
    branches:
      - main  # Срабатывает при push в основную ветку (можно изменить)

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Получаем исходный код репозитория
    - name: Checkout code
      uses: actions/checkout@v4

    # 2. Устанавливаем Docker Buildx (если нужно для дополнительных возможностей)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # 3. Строим Docker-образ
    - name: Build Docker image
      run: |
        docker build -t my-image-name:${{ github.sha }} .

    # 4. Сохраняем образ в tar-архив
    - name: Save Docker image as tar
      run: |
        docker save my-image-name:${{ github.sha }} -o my-image-name.tar

    # 5. Отправляем образ на удаленный сервер с помощью SCP
    - name: Copy Docker image to remote server
      uses: appleboy/scp-action@v0.1.5
      with:
        host: ${{ secrets.HOST }}  # IP удаленного сервера
        username: ${{ secrets.USERNAME }}  # Имя пользователя для SSH
        key: ${{ secrets.SSH_KEY }}  # Приватный SSH-ключ для доступа
        source: "my-image-name.tar"
        target: "/path/to/destination/folder/my-image-name.tar"  # Путь назначения на сервере

    # 6. Подключаемся через SSH и деплоим на сервере
    - name: SSH to server and deploy
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.HOST }}  # IP удаленного сервера
        username: ${{ secrets.USERNAME }}  # Имя пользователя для SSH
        key: ${{ secrets.SSH_KEY }}  # Приватный SSH-ключ для доступа
        script: |
          # Загрузка Docker-образа на сервер
          docker load -i /path/to/destination/folder/my-image-name.tar

          # Останавливаем старый контейнер (если он есть)
          docker stop my-container || true
          docker rm my-container || true

          # Запускаем новый контейнер с обновленным образом
          docker run -d --name my-container -p 8080:80 my-image-name:${{ github.sha }}

          # При необходимости выполните дополнительные команды
